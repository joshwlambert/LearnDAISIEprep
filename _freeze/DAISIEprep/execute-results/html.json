{
  "hash": "0ec63e4e9069c1507473f913a454ef8e",
  "result": {
    "markdown": "---\ntitle: \"DAISIEprep\"\nauthor: Luis Valente\n---\n\n\n# Course Island Biology\n\n## Part 2 - DAISIEprep\n\n### In this tutorial, the main features of DAISIEprep are explained. DAISIEprep is an R package that facilitates formatting of data for subsequent use in DAISIE.\n\n![DAISIEprep R package logo](images/DAISIEprep_logo.png){fig-align=\"center\"}\n\n#### A typical DAISIEprep pipeline is as follows: 1) identify island colonisation events for the taxonomic group of interest from time-calibrated phylogenetic trees, 2) assign an island endemicity status (endemic, non-endemic, not present) to each of the species, 3) automatically extract times of colonisation of the island and diversification within the island from the phylogenies; 4) add any missing species, 5) format data for DAISIE.\n\n#### The DAISIEprep tutorial is divided into 2 sections:\n\n1.  **Phylogeny example** - Using a simulated phylogeny including island and non-island species, learn how to extract and format island data for running DAISIE.\n\n2.  **Adding missing species** - Learn how to add missing species, lineages, etc, to your DAISIE data list.\n\n#### First load the required packages:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(DAISIEprep)\nlibrary(ape)\nlibrary(phylobase)\nlibrary(ggtree)\nlibrary(ggimage)\nlibrary(castor)\n```\n:::\n\n\n## 2.1. Single Phylogeny Example\n\n#### In this section we demonstrate a simple example of extracting and formatting data from a single phylogeny. We use a simulated phylogeny, which facilitates explaining how the data is structured.\n\nFirst we simulate a phylogeny using the package ape.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(\n  4,\n  kind = \"Mersenne-Twister\",\n  normal.kind = \"Inversion\",\n  sample.kind = \"Rejection\"\n)\nphylo <- ape::rcoal(10)\n```\n:::\n\n\n**Important:** DAISIEprep requires the tip labels (taxon names) in the phylogeny to be formatted as genus name and species name separated by an underscore (e.g. \"Canis_lupus\", \"Species_1\").\n\nHere we add tip labels (representing our species) to the simulated phylogeny. In this case, all taxa sampled are different plant species from the same genus.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nphylo$tip.label <- c(\"Plant_a\", \"Plant_b\", \"Plant_c\", \"Plant_d\", \"Plant_e\",\n                     \"Plant_f\", \"Plant_g\", \"Plant_h\", \"Plant_i\", \"Plant_j\")\n```\n:::\n\n\nThen we convert the phylogeny to a phylo4 class, defined in the package phylobase. This allows users to easily work with data for each tip in the phylogeny, for example whether they are endemic to the island or not.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nphylo <- phylobase::phylo4(phylo)\nphylobase::plot(phylo)\n```\n\n::: {.cell-output-display}\n![](DAISIEprep_files/figure-html/convert phylo to phylo4-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nNow we have a phylogeny in the phylo4 format to which we can easily append data.\n\nSpecify tips corresponding to species from your focal island by specifying that they are endemic and/or non-endemic to the island. In the example below, species Plant_h is found on the island but it not endemic, and species Plant_f and Plant_e are found on the island and are endemic to the island. All other species on the phylogeny are NOT present on the island.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_species <- data.frame(\n  tip_labels = c(\"Plant_h\",\n                 \"Plant_f\",\n                 \"Plant_e\")\n  ,\n  tip_endemicity_status = c(\"nonendemic\",\"endemic\",\"endemic\"))\n```\n:::\n\n\nNow that we know which species are present on the island, we can assign an endemicity status to all the species in the phylogeny.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nendemicity_status <- create_endemicity_status(\n  phylo = phylo,\n  island_species = island_species\n)\n```\n:::\n\n\nAnd append this information to the phylogeny object:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nphylod <- phylobase::phylo4d(phylo, endemicity_status)\n```\n:::\n\n\nWe can now visualise our phylogeny with the island endemicity statuses plotted at the tips. This uses the ggtree and ggplot2 packages.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot_phylod(phylod = phylod)\n```\n\n::: {.cell-output-display}\n![](DAISIEprep_files/figure-html/plot phylogeny with tip data-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nAs you can see, in the example phylogeny, there appear to be 2 separate colonisation events of the island - one which has led to species Plant_f and Plant_e and other that has led to the non-endemic species Plant_h.\n\nNow that we can see the tips that are present on the island, we can extract them to form our island community data set that can be used in the DAISIE R package to fit likelihood models of island colonisation and diversification.\n\nBefore we extract species, we first create an object to store all of the island colonists' information. This uses the `island_tbl` class introduced in this package (DAISIEprep). This `island_tbl` object can then easily be converted to a DAISIE data list using the function `create_daisie_data` (more information on this below).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl <- island_tbl()\nisland_tbl\n#> Class:  Island_tbl \n#> [1] clade_name      status          missing_species col_time       \n#> [5] col_max_age     branching_times min_age         species        \n#> [9] clade_type     \n#> <0 rows> (or 0-length row.names)\n```\n:::\n\n\nWe can see that this is an object containing an empty data frame. In order to fill this data frame with information on the island colonisation and diversification events we can run:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl <- extract_island_species(\n  phylod = phylod,\n  extraction_method = \"min\"\n)\nisland_tbl\n#> Class:  Island_tbl \n#>   clade_name     status missing_species  col_time col_max_age branching_times\n#> 1    Plant_e    endemic               0 0.1925924       FALSE    0.154371....\n#> 2    Plant_h nonendemic               0 0.1233674       FALSE              NA\n#>   min_age      species clade_type\n#> 1      NA Plant_e,....          1\n#> 2      NA      Plant_h          1\nisland_tbl_min<-island_tbl\n```\n:::\n\n\nThe function `extract_island_species()` is the main function in DAISIEprep to extract data from the phylogeny. In the example above, we used the \"min\" extraction algorithm. The \"min\" algorithm extracts island community data assuming no back-colonisation from the island to the mainland. Each row in the `island_tbl` corresponds to a separate colonisation of the island. **In this case, two colonist lineages were correctly identified using the 'min' extraction algorithm, one endemic and another non-endemic. Each row in the table corresponds to one colonisation event.**\n\nHowever, if back-colonisation is frequent (for example, one species within a large endemic island radiation colonised another island or mainland), we recommend using the \"asr\" algorithm, which extracts the most likely colonisations inferred in an ancestral area reconstruction. To use the \"asr\" algorithm, we first need to know the probability of the ancestors of the island species being present on the island to determine the time of colonisation. To do this, we can fit one of many ancestral state reconstruction methods. Here we use the \"mk\" model (which uses a continuous-time markov model to reconstruct ancestral states), as it is a simple method that should prove reliable for reconstructing the ancestral species areas (i.e. on the island or not on the island) for most cases. First, we translate our extant species endemicity status to a numeric representation of whether that species is on the island.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nphylod <- add_asr_node_states(phylod = phylod, asr_method = \"mk\")\n```\n:::\n\n\nNow we can plot the phylogeny, which this time includes the node labels for the presence/absence on the island in ancestral nodes.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot_phylod(phylod = phylod)\n```\n\n::: {.cell-output-display}\n![](DAISIEprep_files/figure-html/plot phylogeny with tip and node data-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\\\nSidenote: if you are wondering what the probabilities are at each node and whether this should influence your decision to pick a preference for island or mainland when the likelihoods for each state are equal, we can plot the probabilities at the nodes to visualise the ancestral state reconstruction using `plot_phylod(phylod = phylod, node_pies = TRUE)`.\n\nNow we can extract island colonisation and diversification times from the phylogeny with asr using the reconstructed ancestral states of island presence/absence.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl_asr <- extract_island_species(\n  phylod = phylod,\n  extraction_method = \"asr\"\n)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl_asr\n#> Class:  Island_tbl \n#>   clade_name     status missing_species  col_time col_max_age branching_times\n#> 1    Plant_e    endemic               0 0.1925924       FALSE    0.154371....\n#> 2    Plant_h nonendemic               0 0.1233674       FALSE              NA\n#>   min_age      species clade_type\n#> 1      NA Plant_e,....          1\n#> 2      NA      Plant_h          1\n```\n:::\n\n\nBy comparing `island_tbl_min` and `island_tbl_asr` you can see the differences in the 2 extraction methods.\\\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nall.equal(island_tbl_min,island_tbl_asr)\n#> [1] TRUE\n```\n:::\n\n\nIn this case, the results using \"asr\" and \"min\" are exactly the same. For the purposes of this practical, we will proceed with the results from \"asr\" `(island_tbl_asr`). For convenience, let's rename the object to `island_tbl`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl<-island_tbl_asr\n```\n:::\n\n\nYou can visualize the contents of the island_tbl object to try and figure out what they mean.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nView(island_tbl)\n```\n:::\n\n\nFor example, the code below shows you the names of the species included in each lineage:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl@island_tbl$species\n#> [[1]]\n#> [1] \"Plant_e\" \"Plant_f\"\n#> \n#> [[2]]\n#> [1] \"Plant_h\"\n```\n:::\n\n\nNow that we have the `island_tbl` we can convert this to the DAISIE data list to be used by the DAISIE inference model. To convert to the DAISIE data list (i.e. the input data of the DAISIE inference model) we use `create_daisie_data()`, providing the `island_tbl` as input. We also need to specify:\n\n-   The age of the island or archipelago. Here we use an island age of twelve million years (`island_age = 12`).\n-   Whether the colonisation times extracted from the phylogenetic data should be considered precise (`precise_col_time = TRUE`). We will not discuss the details of this here, but briefly by setting this to `TRUE` the data will tell the DAISIE model that the colonisation times are known without error. Setting `precise_col_time = FALSE` will change tell the DAISIE model that the colonisation time is uncertain and should interpret this as the upper limit to the time of colonisation and integrate over the uncertainty between this point and either the present time or to the first branching point (either speciation or divergence into subspecies).\n-   The number of species in the mainland source pool. Here we set it to 100 (`num_mainland_species = 100`). This will be used to calculate the number of species that could have potentially colonised the island but have not. When we refer to the mainland pool, this does not necessarily have to be a continent, it could be a different island if the source of species immigrating to an island is largely from another nearby island (a possible example of this could be Madagascar being the source of species colonising Comoros). This information is used by the DAISIE model to calculate the colonisation rate of the island.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_list <- create_daisie_data(\n  data = island_tbl,\n  island_age = 12,\n  num_mainland_species = 100,\n  precise_col_time = TRUE\n)\n```\n:::\n\n\nBelow we show two elements of the DAISIE data list produced. The first element `data_list[[1]]` in every DAISIE data list is the island community metadata, containing the island age and the number of species in the mainland pool that did not leave descendants on the island at the present day. This is important information for DAISIE inference, as it is possible some mainland species colonised the island but went extinct leaving no trace of their island presence.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_list[[1]]\n#> $island_age\n#> [1] 12\n#> \n#> $not_present\n#> [1] 98\n```\n:::\n\n\nNext is the first element containing information on island colonists (every element `data_list[[x]]` in the list after the metadata contains information on individual island colonists). This contains the name of the colonist, the number of missing species, and the branching times, which is a vector containing the age of the island, the colonisation time and the times of any cladogenesis events. Confusingly, it may be that the branching times vector contains no branching times: when there are only two numbers in the vector these are the island age followed by the colonisation time. Then there is the stac, which stands for status of colonist. This is a number which tells the DAISIE model how to identify the endemicity and colonisation uncertainty of the island colonist ([these are explained here if you are interested](https://cran.r-project.org/package=DAISIE/vignettes/stac_key.html)). Lastly, the type1or2 defines which macroevolutionary regime an island colonist is in. By macroevolutionary regime we mean the set of rates of colonisation, speciation and extinction for that colonist. Most applications will assume all island clades have the same regime and thus all are assigned type 1. However, if there is **a priori** expectation that one clade significantly different from the rest, e.g. the Galápagos finches amongst the other terrestrial birds of the Galápagos archipelago this clade can be set to type 2.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_list[[2]]\n#> $colonist_name\n#> [1] \"Plant_e\"\n#> \n#> $branching_times\n#> [1] 12.0000000  0.1925924  0.1543711\n#> \n#> $stac\n#> [1] 2\n#> \n#> $missing_species\n#> [1] 0\n#> \n#> $type1or2\n#> [1] 1\n```\n:::\n\n\nThis data list is now ready to be used in the DAISIE maximum likelihood inference model from the R package DAISIE. But let's learn how to add missing species (species not sampled in the phylogeny) to this datalist.\n\n## 2.2. Adding missing species\n\nIt is often the case that phylogenetic data is not available for some island species or even for entire lineages present in the island community. But we can still include these species in our DAISIE analyses using DAISIEprep. This section is about the tools that DAISIEprep provides in order to handle missing data, and generally to handle species that are missing and need to be input into the data manually.\n\nFor this section, as with the previous section, the core data structure we are going to work with is the `island_tbl`. We will use the `island_tbl` for the example plant dataset produced in the last section.\n\n### 2.2.1 Adding missing species to an island clade that has been sampled in the phylogeny\n\nThis option is for cases in which a clade has been sampled in the phylogeny, and at least 1 colonisation or 1 branching time is available in the datalist, but 1 or more species from that clade were not sampled. For this example, we imagine that 2 species have not been sampled, and that we want to add them as missing species to the lineage containing species \"Plant_e\" that is sampled in the phylogeny. To assign two missing species to this clade we use the function `add_missing_species()` The argument `species_to_add_to` uses a representative sampled species from that island clade to work out which colonist in the `island_tbl` to assign the specified number of missing species (`num_missing_species`) to. You can find out which species are already sampled in each lineage using:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl@island_tbl$species\n#> [[1]]\n#> [1] \"Plant_e\" \"Plant_f\"\n#> \n#> [[2]]\n#> [1] \"Plant_h\"\n```\n:::\n\n\nNow run the code:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl <- add_missing_species(\n  island_tbl = island_tbl,\n  # num_missing_species equals total species missing\n  num_missing_species = 2,\n  # name of a sampled species you want to \"add\" the missing to\n  # it can be any in the clade\n  species_to_add_to = \"Plant_e\"\n)\n```\n:::\n\n\nThe new island table now has missing species added to the lineage we wanted to:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl@island_tbl$missing_species\n#> [1] 2 0\n```\n:::\n\n\nWith the new missing species added to the `island_tbl` we can repeat the conversion steps above using `create_daisie_data()` to produce data accepted by the DAISIE model.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_list <- create_daisie_data(\n  data = island_tbl,\n  island_age = 12,\n  num_mainland_species = 100,\n  precise_col_time = TRUE\n)\n```\n:::\n\n\n### 2.2.2 Adding an entire lineage when a phylogeny is not available for the lineage.\n\nFor cases when the missing species belong to a lineage that has not been sampled in the phylogeny. Assuming we did not have any phylogenetic data or colonisation time estimate for the island clade, we can insert species as missing and specify them as a separate lineage. Because not colonisation and branching times are known for this lineage, when this lineage later gets processed by the DAISIE inference model it will be assumed it colonised the island any time between the island's formation and the present.\n\nThe input needed are:\n\n-   `island_tbl` to add to an existing `island_tbl`\n\n-   `clade_name` a name to represent the new clade addeed, can either be a specific species from the clade or a genus name, or another name that represent those species\n\n-   `status` either \"endemic\" or \"nonendemic\"\n\n-   `species` a vector of species names contained within colonist (if applicable)\n\n-   `missing_species` **In the case of a lineage with just 1 species (i.e. not an island radiation) the number of missing species is zero, as by adding the colonist it already counts as one automatically. In the case of an island clade of more than one species, the number of missing species in this case should be `n-1`.**\n\nExample for adding lineage with 1 species:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl <- add_island_colonist(\n  island_tbl = island_tbl,\n  clade_name = \"Plant_y\",\n  status = \"endemic\",\n  # clade with just 1 species, missing_species = 0\n  # because adding the lineage already counts as 1\n  missing_species = 0,\n  col_time = NA_real_,\n  col_max_age = FALSE,\n  branching_times = NA_real_,\n  min_age = NA_real_,\n  clade_type = 1,\n  species = \"Plant_a\"\n)\n```\n:::\n\n\nExample for adding lineage with 5 species (\"Plant_a\", \"Plant_b\", \"Plant_c\", \"Plant_d\", \"Plant_e\") to a lineage called \"Plant_radiation\"\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nisland_tbl <- add_island_colonist(\n  island_tbl = island_tbl,\n  clade_name = \"Plant_radiation\",\n  status = \"endemic\",\n  # the total species is 5 and all are missing\n  # but we add missing_species = 4 because\n  # adding the lineage already counts as 1\n  missing_species = 4,\n  col_time = NA_real_,\n  col_max_age = FALSE,\n  branching_times = NA_real_,\n  min_age = NA_real_,\n  clade_type = 1,\n  species = c(\"Plant_a\", \"Plant_b\", \"Plant_c\",\n              \"Plant_d\", \"Plant_e\")\n)\n```\n:::\n\n\nWith the new missing species added to the `island_tbl` we can repeat the conversion steps above using `create_daisie_data()` to produce data accepted by the DAISIE model.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndata_list <- create_daisie_data(\n  data = island_tbl,\n  island_age = 12,\n  num_mainland_species = 100,\n  precise_col_time = TRUE\n)\n```\n:::\n\n\nEnd of the DAISIEprep tutorial!\n",
    "supporting": [
      "DAISIEprep_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
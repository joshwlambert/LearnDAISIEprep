{
  "hash": "9a0ef21df19601f0d317320460329750",
  "result": {
    "markdown": "---\ntitle: \"Answers\"\nauthor: Luis Valente\n---\n\n\n## Example of how to extract data for Jamaica species from the *Insula* tree, add missing species, fit DAISIE models and run simulations. {#sec-answers}\n\n### Load required packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list=ls())\nlibrary(ape)\nlibrary(DAISIEprep)\nlibrary(DAISIE)\n```\n:::\n\n\n### Load tree\n\n\n::: {.cell}\n\n```{.r .cell-code}\nInsula_tree<-read.nexus(\"data/Insula.tre\")\n```\n:::\n\n\nVisualise tree (easier to use Figtree!)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(Insula_tree)\n```\n\n::: {.cell-output-display}\n![](answers_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Prepare data using DAISIEprep\n\nLook in the [checklist](data/Insula_checklist.xlsx) to see which species occur on Jamaica. Specify tips corresponding to Jamaica species by specifying that they are endemic and/or non-endemic to the island:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisland_species <- data.frame(\n  tip_labels = c(\"Spec_29\",\n                 \"Spec_48\",\n                 \"Spec_47\",\n                 \"Spec_38\",\n                 \"Spec_43\",\n                 \"Spec_42\",\n                 \"Spec_39\",\n                 \"Spec_33\",\n                 \"Spec_26\",\n                 \"Spec_19\",\n                 \"Spec_41\",\n                 \"Spec_40\",\n                 \"Spec_25\",\n                 \"Spec_9\",\n                 \"Spec_24\")\n  ,\n  tip_endemicity_status = c(rep(\"endemic\",14),\"nonendemic\"))\n```\n:::\n\n\nAssign island endemicity status to all species in the dataset (including the non-Jamaican species)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nendemicity_status <- create_endemicity_status(\n  phylo = Insula_tree,\n  island_species = island_species\n)\n```\n:::\n\n\nAdd endemicity status to the phylogeny\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphylod <- phylobase::phylo4d(Insula_tree, endemicity_status)\n```\n:::\n\n\nVisualize this on the tree\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_phylod(phylod = phylod)\n```\n\n::: {.cell-output-display}\n![](answers_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nExtract data from the phylogeny using the min algorithm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisland_tbl_min <- extract_island_species(\n  phylod = phylod,\n  extraction_method = \"min\"\n)\nisland_tbl_min\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nClass:  Island_tbl \n  clade_name     status missing_species  col_time col_max_age branching_times\n1     Spec_9    endemic               0 0.2892541       FALSE              NA\n2    Spec_19    endemic               0 0.4972437       FALSE    0.207998....\n3    Spec_24 nonendemic               0 0.1694692       FALSE              NA\n4    Spec_25    endemic               0 0.5035954       FALSE    0.165789....\n5    Spec_29    endemic               0 0.1166231       FALSE              NA\n  min_age      species clade_type\n1      NA       Spec_9          1\n2      NA Spec_19,....          1\n3      NA      Spec_24          1\n4      NA Spec_25,....          1\n5      NA      Spec_29          1\n```\n:::\n:::\n\n\nExtract data from the phylogeny using the ancestral state algorithm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nphylod <- add_asr_node_states(phylod = phylod, asr_method = \"mk\")\nplot_phylod(phylod = phylod)\n```\n\n::: {.cell-output-display}\n![](answers_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nisland_tbl_asr <- extract_island_species(\n  phylod = phylod,\n  extraction_method = \"asr\"\n)\nisland_tbl_asr\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nClass:  Island_tbl \n  clade_name     status missing_species  col_time col_max_age branching_times\n1     Spec_9    endemic               0 0.2892541       FALSE              NA\n2    Spec_19    endemic               0 0.4972437       FALSE    0.207998....\n3    Spec_24 nonendemic               0 0.1694692       FALSE              NA\n4    Spec_25    endemic               0 0.5035954       FALSE    0.165789....\n5    Spec_29    endemic               0 0.1166231       FALSE              NA\n  min_age      species clade_type\n1      NA       Spec_9          1\n2      NA Spec_19,....          1\n3      NA      Spec_24          1\n4      NA Spec_25,....          1\n5      NA      Spec_29          1\n```\n:::\n:::\n\n\nCompare 2 options:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall.equal(island_tbl_min,island_tbl_asr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nAs you can see, the results of the 2 extractions (min and asr) are exactly the same in this case, so we can use either for the subsequent analyses.\n\n### Add missing species\n\nAdd missing species \"Spec_51\", which is not closely related to any species\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisland_tbl<-island_tbl_min\nisland_tbl <- add_island_colonist(\n  island_tbl = island_tbl,\n  clade_name = \"Spec_51\",\n  status = \"endemic\",\n  missing_species = 0,\n  col_time = NA_real_,\n  col_max_age = FALSE,\n  branching_times = NA_real_,\n  min_age = NA_real_,\n  clade_type = 1,\n  species = \"Spec_51\"\n)\n```\n:::\n\n\n**An alternative** is to set the colonisation time to be younger than the mainland clade it is related to, by setting `col_time` to the age you choose and setting `col_max_age=TRUE` to tell DAISIE that is a maximum age for colonisation.\n\nAdd missing species Spec_52, closely related to Spec_42\n\n\n::: {.cell}\n\n```{.r .cell-code}\nisland_tbl <- add_missing_species(\n  island_tbl = island_tbl,\n  num_missing_species = 1, \n  species_to_add_to = \"Spec_42\"\n)\n```\n:::\n\n\nCreate DAISIE datalist\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninsula_data_list <- create_daisie_data(\n  data = island_tbl,\n  island_age = 5,\n  num_mainland_species = 1000,\n  precise_col_time = TRUE\n)\n```\n:::\n\n\n## Fit DAISIE models to data\n\nFit model with 5 parameters\n\n\n::: {.cell hash='answers_cache/html/M1_35bd5f016da58c9b336cba83db9ef76e'}\n\n```{.r .cell-code}\nM1<-DAISIE_ML(\n  datalist = insula_data_list,\n  initparsopt = c(1.5,1.1,20,0.009,1.1),\n  ddmodel = 11,\n  idparsopt = 1:5,\n  parsfix = NULL,\n  idparsfix = NULL\n)\nM1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  lambda_c       mu       K      gamma lambda_a    loglik df conv\n1 5.859948 7.770723 3707849 0.02505749 3.234032 -37.10764  5    0\n```\n:::\n:::\n\n\nFit model with no carrying capacity\n\n\n::: {.cell hash='answers_cache/html/M2_fb42eb73dd075b1f5776bdbe49ecf75a'}\n\n```{.r .cell-code}\nM2<-DAISIE_ML(\n  datalist = insula_data_list,\n  initparsopt = c(1.5,1.1,0.009,1.1),\n  idparsopt = c(1,2,4,5),\n  parsfix = Inf,\n  idparsfix = 3,\n  ddmodel=0\n)\nM2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  lambda_c       mu   K      gamma lambda_a    loglik df conv\n1 5.901964 7.820509 Inf 0.02522255 3.198683 -37.10743  4    0\n```\n:::\n:::\n\n\nFit model with no anagenesis (optional)\n\n\n::: {.cell hash='answers_cache/html/M3_f79009038d58b6cec6dce0477dbab8bd'}\n\n```{.r .cell-code}\nM3<-DAISIE_ML(\n  datalist = insula_data_list,\n  initparsopt = c(1.5,1.1,0.009),\n  idparsopt = c(1,2,4),\n  parsfix = c(Inf,0),\n  idparsfix = c(3,5),\n  ddmodel=0\n)\nM3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  lambda_c       mu   K      gamma lambda_a    loglik df conv\n1 6.740009 8.743373 Inf 0.02747074        0 -37.30009  3    0\n```\n:::\n:::\n\n\nSave model results in a table\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_results<-rbind(M1,M2,M3)\nmodel_results\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  lambda_c       mu       K      gamma lambda_a    loglik df conv\n1 5.859948 7.770723 3707849 0.02505749 3.234032 -37.10764  5    0\n2 5.901964 7.820509     Inf 0.02522255 3.198683 -37.10743  4    0\n3 6.740009 8.743373     Inf 0.02747074 0.000000 -37.30009  3    0\n```\n:::\n:::\n\n\nCreate AIC function for model comparison\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAIC_compare<- function(LogLik,k){\n  aic <- (2*k)-(2*LogLik)\n  return(aic)\n}\n```\n:::\n\n\nCompute AIC for all the models\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAICs<-AIC_compare(c(M1$loglik ,M2$loglik, M3$loglik),c(M1$df,M2$df,M3$df))\nnames(AICs)<-c('M1','M2','M3')\nAICs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      M1       M2       M3 \n84.21527 82.21486 80.60018 \n```\n:::\n:::\n\n\nIn this case, the preferred model is M3.\n\n## Simulate islands based on parameters from preferred model\n\nRun simulations\n\n\n::: {.cell hash='answers_cache/html/Simulations_93fb055b10b06c2faa48c3cb204f3078'}\n\n```{.r .cell-code}\nInsula_sims<-DAISIE_sim(\n  time=4,\n  M=1000,\n  pars=as.numeric(M3[1:5]),\n  replicates= 100,\n  verbose = 1,\n  plot_sims = FALSE)\n```\n:::\n\n\nPlot simulations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDAISIE_plot_sims(Insula_sims)\n```\n\n::: {.cell-output-display}\n![](answers_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nIt looks like *Insula* diversity in the island of Jamaica is at a dynamic equilibrium.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}